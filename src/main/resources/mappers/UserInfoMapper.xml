<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bravedawn.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="cn.bravedawn.entity.UserInfo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="gender" jdbcType="TINYINT" property="gender" />
        <result column="age" jdbcType="INTEGER" property="age" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="password" jdbcType="VARCHAR" property="password" />
    </resultMap>
    <sql id="Base_Column_List">
        id, name, gender, age, phone, password
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.bravedawn.entity.UserInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_info (name, gender, age,
        phone, password)
        values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{age,jdbcType=INTEGER},
        #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.bravedawn.entity.UserInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=TINYINT},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.bravedawn.entity.UserInfo">
        update user_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=TINYINT},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.bravedawn.entity.UserInfo">
        update user_info
        set name = #{name,jdbcType=VARCHAR},
            gender = #{gender,jdbcType=TINYINT},
            age = #{age,jdbcType=INTEGER},
            phone = #{phone,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectCountById" resultType="int">
        select
            count(*)
        from
            user_info
        where
            id = #{userId}
    </select>

    <select id="selectOnebyUsername" resultMap="BaseResultMap">
        select
            name, password, age, phone, gender
        from
            user_info
        where
            phone = #{username}
    </select>

</mapper>